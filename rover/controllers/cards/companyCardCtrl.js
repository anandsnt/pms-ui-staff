sntRover.controller('RVCompanyCardCtrl', ['$scope', 'RVCompanyCardSrv', '$timeout',
	function($scope, RVCompanyCardSrv, $timeout) {
		$scope.searchMode = true;
		$scope.account_type = 'COMPANY';
		$scope.currentSelectedTab = 'cc-contact-info';

		// initialize company search fields
		$scope.companySearchIntiated = false;
		$scope.companies = [];

		var presentContactInfo = {};

		$scope.$parent.myScrollOptions = {
			'companyResultScroll': {
				snap: false,
				scrollbars: true,
				vScroll: true,
				vScrollbar: true,
				hideScrollbar: false
			}
		};

		//handle tab switching in both cards
		$scope.switchTabTo = function($event, tabToSwitch) {
			$event.stopPropagation();
			$event.stopImmediatePropagation();
			if ($scope.currentSelectedTab == 'cc-contact-info' && tabToSwitch !== 'cc-contact-info') {
				saveContactInformation($scope.contactInformation);
				$scope.$broadcast("contractTabActive");
			}
			if ($scope.currentSelectedTab == 'cc-contracts' && tabToSwitch !== 'cc-contracts') {
				$scope.$broadcast("contactTabActive");
			}
			$scope.currentSelectedTab = tabToSwitch;
		};

		$scope.$on('companyCardAvailable', function() {
			$scope.searchMode = false;
			$scope.contactInformation = $scope.companyContactInformation;
			// object holding copy of contact information
			// before save we will compare 'contactInformation' against 'presentContactInfo'
			// to check whether data changed
			$scope.currentSelectedTab = 'cc-contact-info';
			presentContactInfo = angular.copy($scope.contactInformation);
			$scope.$broadcast("contactTabActive");
			$timeout(function() {
				$scope.$emit('hideLoader');
			}, 1000);

		});

		$scope.$on("cardDetached", function() {
			$scope.searchMode = true;
		});

		$scope.$on("companySearchInitiated", function() {
			$scope.companySearchIntiated = true;
			console.log($scope.searchedCompanies)
			$scope.companies = $scope.searchedCompanies;
			$scope.refreshScroll('companyResultScroll');
		})

		$scope.$on("companySearchStopped", function() {
			$scope.companySearchIntiated = false;
			// console.log($scope.searchedCompanies)
			$scope.companies = $scope.searchedCompanies;
		})

		$scope.$on("newCardSelected", function(id, values) {
			// console.log(values)
			//set the contracts tab right
			$scope.searchMode = false;
			$scope.$emit('hideLoader');
		})

		/**
		 * function to handle click operation on company card, mainly used for saving
		 */
		$scope.companyCardClicked = function($event) {
			$event.stopPropagation();
			if (getParentWithSelector($event, document.getElementById("cc-contact-info")) && $scope.currentSelectedTab == 'cc-contact-info') {
				return;
			} else if (getParentWithSelector($event, document.getElementById("cc-contracts")) && $scope.currentSelectedTab == 'cc-contracts') {
				return;
			} else if (getParentWithSelector($event, document.getElementById("company-card-header"))) {
				$scope.$emit("saveContactInformation");
			}
		};

		/**
		 * recieving function for save contact with data
		 */
		$scope.$on("saveContactInformation", function(event) {
			event.preventDefault();
			event.stopPropagation();
			saveContactInformation($scope.contactInformation);
		});

		/**
		 * a reciever function to do operation on outside click, which is generated by outside click directive
		 */
		$scope.$on("OUTSIDECLICKED", function(event) {
			event.preventDefault();
			saveContactInformation($scope.contactInformation);
		});

		/**
		 * success callback of save contact data
		 */
		var successCallbackOfContactSaveData = function(data) {
			$scope.$emit("hideLoader");
			$scope.contactInformation.id = data.id;
			//taking a deep copy of copy of contact info. for handling save operation
			//we are not associating with scope in order to avoid watch
			presentContactInfo = angular.copy($scope.contactInformation);
		};

		/**
		 * failure callback of save contact data
		 */
		var failureCallbackOfContactSaveData = function(errorMessage) {
			$scope.$emit("hideLoader");
			$scope.errorMessage = errorMessage;
			$scope.currentSelectedTab = 'cc-contact-info';
		};


		/**
		 * function used to save the contact data, it will save only if there is any
		 * change found in the present contact info.
		 */
		var saveContactInformation = function(data) {
			var dataUpdated = false;
			if (!angular.equals(data, presentContactInfo)) {
				dataUpdated = true;
			}
			if (dataUpdated) {
				var dataToSend = JSON.parse(JSON.stringify(data));
				for (key in dataToSend) {
					if (typeof dataToSend[key] !== "undefined" && data[key] != null && data[key] != "") {
						//in add case's first api call, presentContactInfo will be empty object					
						if (JSON.stringify(presentContactInfo) !== '{}') {
							for (subDictKey in dataToSend[key]) {
								if (typeof dataToSend[key][subDictKey] === 'undefined' || dataToSend[key][subDictKey] === presentContactInfo[key][subDictKey]) {
									delete dataToSend[key][subDictKey];
								}
							}
						}
					} else {
						delete dataToSend[key];
					}
				}
				if (typeof dataToSend.countries !== 'undefined') {
					delete dataToSend['countries'];
				}
				dataToSend.account_type = $scope.account_type;
				$scope.invokeApi(RVCompanyCardSrv.saveContactInformation, dataToSend, successCallbackOfContactSaveData, failureCallbackOfContactSaveData);
			}
		};



	}
]);